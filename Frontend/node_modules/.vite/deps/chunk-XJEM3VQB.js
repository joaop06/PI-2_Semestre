import {
  IN_BROWSER,
  SUPPORTS_TOUCH,
  mergeDeep
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-XJEM3VQB.js
} from "./chunk-ZCBY6AYZ.js";
=======
<<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-LHJYLTYV.js
} from "./chunk-HL2KQ5HO.js";
========
} from "./chunk-FCFZN4VE.js";
>>>>>>>> a7d1b3bedeeec3828ea24ec3ac6bb30689c8eee0:Frontend/node_modules/.vite/deps/chunk-NS7N5AQB.js
>>>>>>> 528a0b4c611b0dda6b22b29b7bb5545e161c393f:Frontend/node_modules/.vite/deps/chunk-NS7N5AQB.js
import {
  inject,
  reactive,
  ref,
  shallowRef,
  toRefs,
  watchEffect
} from "./chunk-UB7HVCKZ.js";

// node_modules/vuetify/lib/composables/display.mjs
var DisplaySymbol = Symbol.for("vuetify:display");
var defaultDisplayOptions = {
  mobileBreakpoint: "lg",
  thresholds: {
    xs: 0,
    sm: 600,
    md: 960,
    lg: 1280,
    xl: 1920,
    xxl: 2560
  }
};
var parseDisplayOptions = function() {
  let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : defaultDisplayOptions;
  return mergeDeep(defaultDisplayOptions, options);
};
function getClientWidth(isHydrate) {
  return IN_BROWSER && !isHydrate ? window.innerWidth : 0;
}
function getClientHeight(isHydrate) {
  return IN_BROWSER && !isHydrate ? window.innerHeight : 0;
}
function getPlatform(isHydrate) {
  const userAgent = IN_BROWSER && !isHydrate ? window.navigator.userAgent : "ssr";
  function match(regexp) {
    return Boolean(userAgent.match(regexp));
  }
  const android = match(/android/i);
  const ios = match(/iphone|ipad|ipod/i);
  const cordova = match(/cordova/i);
  const electron = match(/electron/i);
  const chrome = match(/chrome/i);
  const edge = match(/edge/i);
  const firefox = match(/firefox/i);
  const opera = match(/opera/i);
  const win = match(/win/i);
  const mac = match(/mac/i);
  const linux = match(/linux/i);
  return {
    android,
    ios,
    cordova,
    electron,
    chrome,
    edge,
    firefox,
    opera,
    win,
    mac,
    linux,
    touch: SUPPORTS_TOUCH,
    ssr: userAgent === "ssr"
  };
}
function createDisplay(options, ssr) {
  const {
    thresholds,
    mobileBreakpoint
  } = parseDisplayOptions(options);
  const height = ref(getClientHeight(ssr));
  const platform = shallowRef(getPlatform(ssr));
  const state = reactive({});
  const width = ref(getClientWidth(ssr));
  function updateSize() {
    height.value = getClientHeight();
    width.value = getClientWidth();
  }
  function update() {
    updateSize();
    platform.value = getPlatform();
  }
  watchEffect(() => {
    const xs = width.value < thresholds.sm;
    const sm = width.value < thresholds.md && !xs;
    const md = width.value < thresholds.lg && !(sm || xs);
    const lg = width.value < thresholds.xl && !(md || sm || xs);
    const xl = width.value < thresholds.xxl && !(lg || md || sm || xs);
    const xxl = width.value >= thresholds.xxl;
    const name = xs ? "xs" : sm ? "sm" : md ? "md" : lg ? "lg" : xl ? "xl" : "xxl";
    const breakpointValue = typeof mobileBreakpoint === "number" ? mobileBreakpoint : thresholds[mobileBreakpoint];
    const mobile = width.value < breakpointValue;
    state.xs = xs;
    state.sm = sm;
    state.md = md;
    state.lg = lg;
    state.xl = xl;
    state.xxl = xxl;
    state.smAndUp = !xs;
    state.mdAndUp = !(xs || sm);
    state.lgAndUp = !(xs || sm || md);
    state.xlAndUp = !(xs || sm || md || lg);
    state.smAndDown = !(md || lg || xl || xxl);
    state.mdAndDown = !(lg || xl || xxl);
    state.lgAndDown = !(xl || xxl);
    state.xlAndDown = !xxl;
    state.name = name;
    state.height = height.value;
    state.width = width.value;
    state.mobile = mobile;
    state.mobileBreakpoint = mobileBreakpoint;
    state.platform = platform.value;
    state.thresholds = thresholds;
  });
  if (IN_BROWSER) {
    window.addEventListener("resize", updateSize, {
      passive: true
    });
  }
  return {
    ...toRefs(state),
    update,
    ssr: !!ssr
  };
}
function useDisplay() {
  const display = inject(DisplaySymbol);
  if (!display)
    throw new Error("Could not find Vuetify display injection");
  return display;
}

export {
  DisplaySymbol,
  createDisplay,
  useDisplay
};
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-XJEM3VQB.js
//# sourceMappingURL=chunk-XJEM3VQB.js.map
=======
<<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-LHJYLTYV.js
//# sourceMappingURL=chunk-LHJYLTYV.js.map
========
//# sourceMappingURL=chunk-NS7N5AQB.js.map
>>>>>>>> a7d1b3bedeeec3828ea24ec3ac6bb30689c8eee0:Frontend/node_modules/.vite/deps/chunk-NS7N5AQB.js
>>>>>>> 528a0b4c611b0dda6b22b29b7bb5545e161c393f:Frontend/node_modules/.vite/deps/chunk-NS7N5AQB.js
