import {
  destructComputed,
  isCssColor
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-QZQCFNXC.js
} from "./chunk-HL2KQ5HO.js";
=======
} from "./chunk-BQDQCPTT.js";
>>>>>>> 2e6694fa0a683ecabf596e2c8247aea145f61aa8:Frontend/node_modules/.vite/deps/chunk-LVJDYS3B.js
import {
  computed,
  isRef
} from "./chunk-SE5EWVSA.js";

// node_modules/vuetify/lib/composables/color.mjs
function useColor(colors) {
  return destructComputed(() => {
    const classes = [];
    const styles = {};
    if (colors.value.background) {
      if (isCssColor(colors.value.background)) {
        styles.backgroundColor = colors.value.background;
      } else {
        classes.push(`bg-${colors.value.background}`);
      }
    }
    if (colors.value.text) {
      if (isCssColor(colors.value.text)) {
        styles.color = colors.value.text;
        styles.caretColor = colors.value.text;
      } else {
        classes.push(`text-${colors.value.text}`);
      }
    }
    return {
      colorClasses: classes,
      colorStyles: styles
    };
  });
}
function useTextColor(props, name) {
  const colors = computed(() => ({
    text: isRef(props) ? props.value : name ? props[name] : null
  }));
  const {
    colorClasses: textColorClasses,
    colorStyles: textColorStyles
  } = useColor(colors);
  return {
    textColorClasses,
    textColorStyles
  };
}
function useBackgroundColor(props, name) {
  const colors = computed(() => ({
    background: isRef(props) ? props.value : name ? props[name] : null
  }));
  const {
    colorClasses: backgroundColorClasses,
    colorStyles: backgroundColorStyles
  } = useColor(colors);
  return {
    backgroundColorClasses,
    backgroundColorStyles
  };
}

export {
  useColor,
  useTextColor,
  useBackgroundColor
};
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-QZQCFNXC.js
//# sourceMappingURL=chunk-QZQCFNXC.js.map
=======
//# sourceMappingURL=chunk-LVJDYS3B.js.map
>>>>>>> 2e6694fa0a683ecabf596e2c8247aea145f61aa8:Frontend/node_modules/.vite/deps/chunk-LVJDYS3B.js
