import {
  useIntersectionObserver
<<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-GE7DCHMO.js
} from "./chunk-JW2UM3P6.js";
import {
  makeSizeProps,
  useSize
} from "./chunk-KPMVJ7Y3.js";
import {
  useTextColor
} from "./chunk-QZQCFNXC.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-XC5CLHYL.js";
import {
  makeTagProps
} from "./chunk-36OQOIRA.js";
import {
  useResizeObserver
} from "./chunk-B5LPH4AT.js";
========
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-6V73D6OW.js
} from "./chunk-K5DMOPVM.js";
=======
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-GE7DCHMO.js
} from "./chunk-JW2UM3P6.js";
=======
} from "./chunk-JUJFEPYV.js";
>>>>>>> 2e6694fa0a683ecabf596e2c8247aea145f61aa8:Frontend/node_modules/.vite/deps/chunk-EWMDJHUF.js
>>>>>>> 22fac9918d7744ae8695bdc482f43e56e844511e:Frontend/node_modules/.vite/deps/chunk-EWMDJHUF.js
import {
  makeSizeProps,
  useSize
} from "./chunk-OMSOWFL2.js";
import {
  useTextColor
} from "./chunk-EHDJ5PST.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-UBIRPD2D.js";
import {
  makeTagProps
} from "./chunk-SA6BOMWB.js";
import {
  useResizeObserver
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-6V73D6OW.js
} from "./chunk-APSUXL5W.js";
=======
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-GE7DCHMO.js
} from "./chunk-B5LPH4AT.js";
=======
} from "./chunk-FQSSON3Z.js";
>>>>>>> 2e6694fa0a683ecabf596e2c8247aea145f61aa8:Frontend/node_modules/.vite/deps/chunk-EWMDJHUF.js
>>>>>>> 22fac9918d7744ae8695bdc482f43e56e844511e:Frontend/node_modules/.vite/deps/chunk-EWMDJHUF.js
>>>>>>>> dd7e93fd50babc99c13a2e33ce9c04c62367e343:Frontend/node_modules/.vite/deps/chunk-6V73D6OW.js
import {
  convertToUnit,
  genericComponent,
  useRender
<<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-GE7DCHMO.js
} from "./chunk-HL2KQ5HO.js";
========
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-6V73D6OW.js
} from "./chunk-FCFZN4VE.js";
=======
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-GE7DCHMO.js
} from "./chunk-HL2KQ5HO.js";
=======
} from "./chunk-BQDQCPTT.js";
>>>>>>> 2e6694fa0a683ecabf596e2c8247aea145f61aa8:Frontend/node_modules/.vite/deps/chunk-EWMDJHUF.js
>>>>>>> 22fac9918d7744ae8695bdc482f43e56e844511e:Frontend/node_modules/.vite/deps/chunk-EWMDJHUF.js
>>>>>>>> dd7e93fd50babc99c13a2e33ce9c04c62367e343:Frontend/node_modules/.vite/deps/chunk-6V73D6OW.js
import {
  computed,
  createVNode,
  ref,
  toRef,
  watchEffect
} from "./chunk-UB7HVCKZ.js";

// node_modules/vuetify/lib/components/VProgressCircular/VProgressCircular.mjs
import "C:/Users/gabor/Desktop/DSM/2\xB0 semestre/PI Vue/PI-2_Semestre/Frontend/node_modules/vuetify/lib/components/VProgressCircular/VProgressCircular.css";
var VProgressCircular = genericComponent()({
  name: "VProgressCircular",
  props: {
    bgColor: String,
    color: String,
    indeterminate: [Boolean, String],
    modelValue: {
      type: [Number, String],
      default: 0
    },
    rotate: {
      type: [Number, String],
      default: 0
    },
    width: {
      type: [Number, String],
      default: 4
    },
    ...makeSizeProps(),
    ...makeTagProps({
      tag: "div"
    }),
    ...makeThemeProps()
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const MAGIC_RADIUS_CONSTANT = 20;
    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT;
    const root = ref();
    const {
      themeClasses
    } = provideTheme(props);
    const {
      sizeClasses,
      sizeStyles
    } = useSize(props);
    const {
      textColorClasses,
      textColorStyles
    } = useTextColor(toRef(props, "color"));
    const {
      textColorClasses: underlayColorClasses,
      textColorStyles: underlayColorStyles
    } = useTextColor(toRef(props, "bgColor"));
    const {
      intersectionRef,
      isIntersecting
    } = useIntersectionObserver();
    const {
      resizeRef,
      contentRect
    } = useResizeObserver();
    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))));
    const width = computed(() => Number(props.width));
    const size = computed(() => {
      return sizeStyles.value ? Number(props.size) : contentRect.value ? contentRect.value.width : Math.max(width.value, 32);
    });
    const diameter = computed(() => MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value) * 2);
    const strokeWidth = computed(() => width.value / size.value * diameter.value);
    const strokeDashOffset = computed(() => convertToUnit((100 - normalizedValue.value) / 100 * CIRCUMFERENCE));
    watchEffect(() => {
      intersectionRef.value = root.value;
      resizeRef.value = root.value;
    });
    useRender(() => createVNode(props.tag, {
      "ref": root,
      "class": ["v-progress-circular", {
        "v-progress-circular--indeterminate": !!props.indeterminate,
        "v-progress-circular--visible": isIntersecting.value,
        "v-progress-circular--disable-shrink": props.indeterminate === "disable-shrink"
      }, themeClasses.value, sizeClasses.value, textColorClasses.value],
      "style": [sizeStyles.value, textColorStyles.value],
      "role": "progressbar",
      "aria-valuemin": "0",
      "aria-valuemax": "100",
      "aria-valuenow": props.indeterminate ? void 0 : normalizedValue.value
    }, {
      default: () => [createVNode("svg", {
        "style": {
          transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`
        },
        "xmlns": "http://www.w3.org/2000/svg",
        "viewBox": `0 0 ${diameter.value} ${diameter.value}`
      }, [createVNode("circle", {
        "class": ["v-progress-circular__underlay", underlayColorClasses.value],
        "style": underlayColorStyles.value,
        "fill": "transparent",
        "cx": "50%",
        "cy": "50%",
        "r": MAGIC_RADIUS_CONSTANT,
        "stroke-width": strokeWidth.value,
        "stroke-dasharray": CIRCUMFERENCE,
        "stroke-dashoffset": 0
      }, null), createVNode("circle", {
        "class": "v-progress-circular__overlay",
        "fill": "transparent",
        "cx": "50%",
        "cy": "50%",
        "r": MAGIC_RADIUS_CONSTANT,
        "stroke-width": strokeWidth.value,
        "stroke-dasharray": CIRCUMFERENCE,
        "stroke-dashoffset": strokeDashOffset.value
      }, null)]), slots.default && createVNode("div", {
        "class": "v-progress-circular__content"
      }, [slots.default({
        value: normalizedValue.value
      })])]
    }));
    return {};
  }
});

export {
  VProgressCircular
};
<<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-GE7DCHMO.js
//# sourceMappingURL=chunk-GE7DCHMO.js.map
========
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-6V73D6OW.js
//# sourceMappingURL=chunk-6V73D6OW.js.map
=======
<<<<<<< HEAD:Frontend/node_modules/.vite/deps/chunk-GE7DCHMO.js
//# sourceMappingURL=chunk-GE7DCHMO.js.map
=======
//# sourceMappingURL=chunk-EWMDJHUF.js.map
>>>>>>> 2e6694fa0a683ecabf596e2c8247aea145f61aa8:Frontend/node_modules/.vite/deps/chunk-EWMDJHUF.js
>>>>>>> 22fac9918d7744ae8695bdc482f43e56e844511e:Frontend/node_modules/.vite/deps/chunk-EWMDJHUF.js
>>>>>>>> dd7e93fd50babc99c13a2e33ce9c04c62367e343:Frontend/node_modules/.vite/deps/chunk-6V73D6OW.js
